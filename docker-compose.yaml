version: '3.8'
services:
  myapp:
    build: .
    image: go-tutorial:latest
    container_name: my-go-tutorial

    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:

      DATABASE_URL: postgres://postgres_user:postgres_pass@db:5432/postgres_db_name?sslmode=disable
    networks:
      - go-postgres-network
    volumes:
      - .:/app

  db:
    image: postgres:13
    container_name: postgres-db
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_pass
      POSTGRES_DB: postgres_db_name
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - go-postgres-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres_user -d postgres_db_name" ] # Check if PostgreSQL is ready
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:


networks:
  go-postgres-network:
    driver: bridge
